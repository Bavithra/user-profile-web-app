{
  "openapi": "3.0.0",
  "info": {
    "title": "User Profile API service",
    "description": "This is the API definitions for User Profile Service",
    "version": "1.0.0",
    "contact": {
      "name": "Bavithra",
      "email": "bavithra.thangaraj@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local"
    },
    {
      "url": "https://glints-web-be-user-profile.herokuapp.com",
      "description": "Dev"
    },
  ],
  "paths": {
    "/user/{emailId}": {
      "get": {
        "tags": ["User Profile"],
        "summary": "Get a user profile information",
        "description": "",
        "operationId": "getUser",
        "parameters": [
          {
            "in": "path",
            "name": "emailId",
            "description": "email ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EmailId"
            }
          }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": ["User Profile"],
        "summary": "Create user profile",
        "description": "Create User Profile",
        "operationId": "createUser",
        "requestBody": {
"content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          }
        }
      }
    },
    "/user ": {
      "patch": {
        "tags": ["User Profile"],
        "summary": "update user profile information",
        "description": "Create User Profile",
        "operationId": "updateUser",
        "requestBody": {
"content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          }
        }
      }
    },
    "/user/work-experience/{id}": {
    "delete": {
        "tags": ["Work Experience"],
        "summary": "delete work experience entry",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "work experience ID",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GeneratedId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
    "components": {
    "schemas": {
      "EmailId": {
        "type": "string",
        "example": "email@mail.com"
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
        "format": "int64",
        "example": 1
          },
          "email": {
            "type": "string",
            "example": "John@ex.com"
          },
          "Name": {
            "type": "string",
            "example": "John"
          },
          "age": {
            "type": "string",
            "example": "23"
          },
          "profile-image": {
            "type": "string",
            "example": "India, Mumbai (MUM)"
          },
          "work-experience": {
            "$ref": "#/components/schemas/WorkExperience"
          }
        }
      },
      "WorkExperience": {
        "type": "array",
         "items": {
              "type": "object",
              "properties": {
          "id": {
            "type": "integer",
        "format": "int64",
        "example": 1
          },
          "start-date": {
            "type": "string",
            "example": "April 2022"
          },
          "end-date": {
            "type": "string",
            "example": "July 2022"
          },
          "company": {
            "type": "string",
            "example": "Glints"
          },
          "job-title": {
            "type": "string",
            "example": "Developer"
          },
          "job-description": {
            "type": "string",
            "example": "An awesome developer"
          },
        }
         }
        
      },
      "GeneratedId": {
        "type": "integer",
        "format": "int64",
        "example": 1
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "ABC1123"
              },
              "message": {
                "type": "string",
                "example": "Short error message here"
              },
              "description": {
                "type": "string",
                "example": "Longer error description here"
              }
            },
            "required": ["code", "message"]
          }
        },
        "required": ["error"]
      },
    },
    "responses": {
      "BadRequestError": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "error": {
                "code": "ABC1123",
                "message": "Invalid parameters",
                "description": "Invalid parameters"
              }
            }
          }
        }
      },
      "UnexpectedError": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
  }
}
